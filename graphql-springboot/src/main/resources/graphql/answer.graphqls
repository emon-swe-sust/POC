type Answer {
    id: ID!
    examId: String!
    examineeId: String
    examineeName: String
    examTitle: String
    rightAnswers: [String]
    wrongAnswers: [String]
}

input MCQAnswerInput {
    mcqId: ID!
    selectedAnswer: String!
}

extend type Mutation {
    addAnswer (
        examId: String!,
        examineeId: String,
        answers: [MCQAnswerInput!]!
    ): Answer!
}

extend type Query {
    getExamResultByExamId(examId: String!): [Answer!]
    getExamResultByExamineeId(examineeId: String!): [Answer!]
}